<?php
/**
 * MANUEL DE D√âPLOIEMENT CPANEL INTERACTIF
 * IntraSphere - Plateforme Intranet d'Entreprise
 * 
 * Guide complet pour d√©ploiement sur h√©bergement mutualis√© cPanel
 * avec et sans Node.js - Version 2025
 * 
 * @author IntraSphere Development Team
 * @version 2.1
 * @date Ao√ªt 2025
 */

session_start();

// Configuration du manuel
$currentStep = isset($_GET['step']) ? intval($_GET['step']) : 1;
$deploymentType = isset($_GET['type']) ? $_GET['type'] : 'traditional';
$totalSteps = ($deploymentType === 'nodejs') ? 12 : 8;

// Donn√©es de progression
if (!isset($_SESSION['deployment_progress'])) {
    $_SESSION['deployment_progress'] = [];
}

// Marquer une √©tape comme compl√©t√©e
if (isset($_POST['complete_step'])) {
    $_SESSION['deployment_progress'][$_POST['step']] = true;
}

?>
<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Manuel de D√©ploiement cPanel - IntraSphere</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            line-height: 1.6;
            color: #333;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        .header {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 30px;
            margin-bottom: 30px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        }

        .header h1 {
            color: #4a5568;
            font-size: 2.5rem;
            margin-bottom: 10px;
            text-align: center;
        }

        .header p {
            text-align: center;
            color: #718096;
            font-size: 1.1rem;
        }

        .deployment-type-selector {
            display: flex;
            gap: 20px;
            margin: 20px 0;
            justify-content: center;
        }

        .type-card {
            background: #fff;
            border-radius: 15px;
            padding: 20px;
            text-align: center;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
            cursor: pointer;
            transition: all 0.3s ease;
            border: 3px solid transparent;
            min-width: 200px;
        }

        .type-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 30px rgba(0, 0, 0, 0.15);
        }

        .type-card.active {
            border-color: #667eea;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }

        .main-content {
            display: grid;
            grid-template-columns: 300px 1fr;
            gap: 30px;
        }

        .sidebar {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 25px;
            height: fit-content;
            position: sticky;
            top: 20px;
        }

        .progress-bar {
            width: 100%;
            height: 10px;
            background: #e2e8f0;
            border-radius: 5px;
            margin-bottom: 20px;
            overflow: hidden;
        }

        .progress-fill {
            height: 100%;
            background: linear-gradient(90deg, #667eea, #764ba2);
            border-radius: 5px;
            transition: width 0.3s ease;
        }

        .step-list {
            list-style: none;
        }

        .step-item {
            padding: 12px 0;
            border-bottom: 1px solid #e2e8f0;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .step-item:hover {
            background: #f7fafc;
            margin: 0 -10px;
            padding-left: 22px;
            border-radius: 8px;
        }

        .step-item.active {
            color: #667eea;
            font-weight: 600;
        }

        .step-item.completed {
            color: #48bb78;
        }

        .step-item.completed::before {
            content: "‚úì ";
            color: #48bb78;
            font-weight: bold;
        }

        .content-area {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 40px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        }

        .step-header {
            border-bottom: 3px solid #667eea;
            padding-bottom: 15px;
            margin-bottom: 30px;
        }

        .step-title {
            font-size: 2rem;
            color: #2d3748;
            margin-bottom: 10px;
        }

        .step-description {
            color: #718096;
            font-size: 1.1rem;
        }

        .code-block {
            background: #2d3748;
            color: #e2e8f0;
            border-radius: 10px;
            padding: 20px;
            margin: 20px 0;
            overflow-x: auto;
            font-family: 'Courier New', monospace;
            position: relative;
        }

        .code-header {
            background: #4a5568;
            color: white;
            padding: 10px 15px;
            border-radius: 8px 8px 0 0;
            margin: -20px -20px 15px -20px;
            font-weight: 600;
        }

        .file-structure {
            background: #f7fafc;
            border-left: 4px solid #667eea;
            padding: 20px;
            margin: 20px 0;
            border-radius: 0 10px 10px 0;
        }

        .warning {
            background: #fed7d7;
            border: 1px solid #feb2b2;
            color: #742a2a;
            padding: 15px;
            border-radius: 10px;
            margin: 20px 0;
        }

        .info {
            background: #bee3f8;
            border: 1px solid #90cdf4;
            color: #2c5282;
            padding: 15px;
            border-radius: 10px;
            margin: 20px 0;
        }

        .success {
            background: #c6f6d5;
            border: 1px solid #9ae6b4;
            color: #22543d;
            padding: 15px;
            border-radius: 10px;
            margin: 20px 0;
        }

        .navigation {
            display: flex;
            justify-content: space-between;
            margin-top: 40px;
            padding-top: 20px;
            border-top: 1px solid #e2e8f0;
        }

        .btn {
            padding: 12px 25px;
            border: none;
            border-radius: 10px;
            cursor: pointer;
            font-size: 1rem;
            font-weight: 600;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-block;
            text-align: center;
        }

        .btn-primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);
        }

        .btn-secondary {
            background: #e2e8f0;
            color: #4a5568;
        }

        .btn-secondary:hover {
            background: #cbd5e0;
        }

        .checklist {
            list-style: none;
            margin: 20px 0;
        }

        .checklist li {
            padding: 8px 0;
            position: relative;
            padding-left: 30px;
        }

        .checklist li::before {
            content: "‚òê";
            position: absolute;
            left: 0;
            color: #667eea;
            font-size: 1.2rem;
        }

        .file-path {
            background: #f1f5f9;
            border: 1px solid #cbd5e0;
            border-radius: 6px;
            padding: 8px 12px;
            font-family: 'Courier New', monospace;
            color: #2d3748;
            display: inline-block;
            margin: 5px 0;
        }

        .step-complete-btn {
            background: #48bb78;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 8px;
            cursor: pointer;
            font-weight: 600;
            margin-top: 20px;
        }

        .step-complete-btn:hover {
            background: #38a169;
        }

        @media (max-width: 768px) {
            .main-content {
                grid-template-columns: 1fr;
            }
            
            .sidebar {
                position: relative;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üöÄ Manuel de D√©ploiement cPanel</h1>
            <p>Guide complet pour d√©ployer IntraSphere sur h√©bergement mutualis√©</p>
            
            <div class="deployment-type-selector">
                <div class="type-card <?= $deploymentType === 'traditional' ? 'active' : '' ?>" 
                     onclick="window.location.href='?type=traditional&step=1'">
                    <h3>üåê H√©bergement Traditionnel</h3>
                    <p>PHP + MySQL classique</p>
                </div>
                <div class="type-card <?= $deploymentType === 'nodejs' ? 'active' : '' ?>" 
                     onclick="window.location.href='?type=nodejs&step=1'">
                    <h3>‚ö° H√©bergement Node.js</h3>
                    <p>Application compl√®te</p>
                </div>
            </div>
        </div>

        <div class="main-content">
            <div class="sidebar">
                <div class="progress-bar">
                    <div class="progress-fill" style="width: <?= ($currentStep / $totalSteps) * 100 ?>%"></div>
                </div>
                <p><strong>Progression:</strong> <?= $currentStep ?>/<?= $totalSteps ?> √©tapes</p>
                
                <ul class="step-list">
                    <?php
                    $steps = [];
                    
                    if ($deploymentType === 'traditional') {
                        $steps = [
                            1 => "Pr√©paration de l'environnement",
                            2 => "Structure des fichiers",
                            3 => "Configuration base de donn√©es",
                            4 => "Upload des fichiers",
                            5 => "Configuration PHP",
                            6 => "Configuration .htaccess",
                            7 => "Tests et v√©rifications",
                            8 => "Mise en production"
                        ];
                    } else {
                        $steps = [
                            1 => "V√©rification Node.js",
                            2 => "Pr√©paration application",
                            3 => "Build et optimisation",
                            4 => "Structure fichiers",
                            5 => "Configuration cPanel",
                            6 => "Upload application",
                            7 => "Installation d√©pendances",
                            8 => "Configuration base de donn√©es",
                            9 => "Variables d'environnement",
                            10 => "D√©marrage application",
                            11 => "Tests et debug",
                            12 => "Monitoring et maintenance"
                        ];
                    }
                    
                    foreach ($steps as $stepNum => $stepTitle) {
                        $isActive = $stepNum === $currentStep;
                        $isCompleted = isset($_SESSION['deployment_progress'][$stepNum]);
                        $classes = [];
                        
                        if ($isActive) $classes[] = 'active';
                        if ($isCompleted) $classes[] = 'completed';
                        
                        $classStr = implode(' ', $classes);
                        
                        echo "<li class='step-item $classStr' onclick=\"window.location.href='?type=$deploymentType&step=$stepNum'\">";
                        echo "$stepNum. $stepTitle";
                        echo "</li>";
                    }
                    ?>
                </ul>
            </div>

            <div class="content-area">
                <?php
                // Contenu des √©tapes selon le type de d√©ploiement
                include 'step_content.php';
                ?>
                
                <div class="navigation">
                    <?php if ($currentStep > 1): ?>
                        <a href="?type=<?= $deploymentType ?>&step=<?= $currentStep - 1 ?>" class="btn btn-secondary">
                            ‚Üê √âtape pr√©c√©dente
                        </a>
                    <?php else: ?>
                        <div></div>
                    <?php endif; ?>
                    
                    <?php if ($currentStep < $totalSteps): ?>
                        <a href="?type=<?= $deploymentType ?>&step=<?= $currentStep + 1 ?>" class="btn btn-primary">
                            √âtape suivante ‚Üí
                        </a>
                    <?php else: ?>
                        <a href="?type=<?= $deploymentType ?>&step=1" class="btn btn-primary">
                            üéâ Recommencer
                        </a>
                    <?php endif; ?>
                </div>
                
                <form method="POST" style="display: inline;">
                    <input type="hidden" name="step" value="<?= $currentStep ?>">
                    <button type="submit" name="complete_step" class="step-complete-btn">
                        ‚úì Marquer cette √©tape comme termin√©e
                    </button>
                </form>
            </div>
        </div>
    </div>

    <script>
        // Animation d'apparition
        document.addEventListener('DOMContentLoaded', function() {
            const elements = document.querySelectorAll('.content-area > *');
            elements.forEach((el, index) => {
                el.style.opacity = '0';
                el.style.transform = 'translateY(20px)';
                setTimeout(() => {
                    el.style.transition = 'all 0.5s ease';
                    el.style.opacity = '1';
                    el.style.transform = 'translateY(0)';
                }, index * 100);
            });
        });

        // Copie automatique du code
        function copyCode(element) {
            const code = element.textContent;
            navigator.clipboard.writeText(code).then(() => {
                const originalBg = element.style.background;
                element.style.background = '#48bb78';
                setTimeout(() => {
                    element.style.background = originalBg;
                }, 1000);
            });
        }

        // Ajouter la fonctionnalit√© de copie aux blocs de code
        document.querySelectorAll('.code-block').forEach(block => {
            block.addEventListener('click', () => copyCode(block));
            block.style.cursor = 'pointer';
            block.title = 'Cliquer pour copier';
        });
    </script>
</body>
</html>

<?php
/**
 * CONTENU DES √âTAPES - step_content.php
 * Ce fichier contient le contenu d√©taill√© de chaque √©tape
 */

function renderStepContent($deploymentType, $currentStep) {
    if ($deploymentType === 'traditional') {
        renderTraditionalSteps($currentStep);
    } else {
        renderNodeJSSteps($currentStep);
    }
}

function renderTraditionalSteps($step) {
    switch ($step) {
        case 1:
            ?>
            <div class="step-header">
                <h2 class="step-title">√âtape 1: Pr√©paration de l'environnement</h2>
                <p class="step-description">Configuration initiale et v√©rification des pr√©requis pour l'h√©bergement traditionnel</p>
            </div>

            <div class="info">
                <strong>üìã Pr√©requis pour IntraSphere:</strong><br>
                ‚Ä¢ PHP 8.1+ avec extensions: PDO, MySQLi, OpenSSL, cURL, JSON<br>
                ‚Ä¢ MySQL 5.7+ ou MariaDB 10.3+<br>
                ‚Ä¢ Espace disque: minimum 100 MB<br>
                ‚Ä¢ H√©bergeur supportant les r√©√©critures d'URL (.htaccess)
            </div>

            <h3>üîç V√©rification de votre h√©bergement</h3>
            <div class="checklist">
                <li>Acc√®s cPanel avec version r√©cente</li>
                <li>Gestionnaire de fichiers accessible</li>
                <li>MySQL Database Wizard disponible</li>
                <li>Support PHP 8.1+ activ√©</li>
                <li>Domaine ou sous-domaine configur√©</li>
            </div>

            <h3>üìÅ Architecture du projet IntraSphere</h3>
            <div class="file-structure">
                <strong>Structure actuelle de votre projet:</strong>
                <div class="code-block">
                    <div class="code-header">Structure IntraSphere</div>
intrasphere/
‚îú‚îÄ‚îÄ client/                    # Frontend React
‚îÇ   ‚îú‚îÄ‚îÄ src/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ components/       # Composants UI
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ pages/           # Pages de l'application
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ hooks/           # Hooks React personnalis√©s
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ lib/             # Utilitaires
‚îÇ   ‚îî‚îÄ‚îÄ dist/                # Build de production (apr√®s npm run build)
‚îú‚îÄ‚îÄ server/                   # Backend Express
‚îÇ   ‚îú‚îÄ‚îÄ auth.ts              # Authentification
‚îÇ   ‚îú‚îÄ‚îÄ routes.ts            # Routes API
‚îÇ   ‚îú‚îÄ‚îÄ storage.ts           # Gestion donn√©es
‚îÇ   ‚îî‚îÄ‚îÄ index.ts             # Point d'entr√©e serveur
‚îú‚îÄ‚îÄ shared/                   # Types partag√©s
‚îÇ   ‚îî‚îÄ‚îÄ schema.ts            # Sch√©mas base de donn√©es
‚îú‚îÄ‚îÄ package.json             # D√©pendances Node.js
‚îî‚îÄ‚îÄ docs/                    # Documentation
                </div>
            </div>

            <div class="warning">
                <strong>‚ö†Ô∏è Important:</strong> Pour l'h√©bergement traditionnel, nous devons adapter cette structure Node.js en version PHP statique. Le frontend sera servi comme site statique et nous cr√©erons une API PHP simple pour les fonctionnalit√©s backend.
            </div>
            <?php
            break;

        case 2:
            ?>
            <div class="step-header">
                <h2 class="step-title">√âtape 2: Structure des fichiers pour cPanel</h2>
                <p class="step-description">Organisation des fichiers pour un d√©ploiement traditionnel r√©ussi</p>
            </div>

            <h3>üèóÔ∏è Structure cible sur cPanel</h3>
            <div class="file-structure">
                <strong>Organisation recommand√©e:</strong>
                <div class="code-block">
                    <div class="code-header">Structure cPanel</div>
/home/username/
‚îú‚îÄ‚îÄ public_html/              # Dossier web principal (accessible publiquement)
‚îÇ   ‚îú‚îÄ‚îÄ index.html           # Page d'accueil (build React)
‚îÇ   ‚îú‚îÄ‚îÄ static/              # Assets statiques (CSS, JS, images)
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ css/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ js/
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ media/
‚îÇ   ‚îú‚îÄ‚îÄ api/                 # Scripts PHP pour l'API
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ index.php        # Router principal
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ auth.php         # Authentification
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ announcements.php
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ documents.php
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ users.php
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ trainings.php    # Nouveau: gestion formations
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ config.php       # Configuration base de donn√©es
‚îÇ   ‚îú‚îÄ‚îÄ uploads/             # Fichiers upload√©s
‚îÇ   ‚îî‚îÄ‚îÄ .htaccess           # Configuration serveur
‚îú‚îÄ‚îÄ intrasphere_config/      # Configuration priv√©e (non accessible web)
‚îÇ   ‚îú‚îÄ‚îÄ database.php         # Param√®tres BDD
‚îÇ   ‚îî‚îÄ‚îÄ security.php         # Cl√©s de s√©curit√©
‚îî‚îÄ‚îÄ logs/                    # Logs d'erreur
                </div>
            </div>

            <h3>üìÑ Fichiers essentiels √† cr√©er</h3>
            
            <h4>1. Configuration base de donn√©es</h4>
            <div class="code-block">
                <div class="code-header">intrasphere_config/database.php</div>
&lt;?php
// Configuration base de donn√©es pour IntraSphere
define('DB_HOST', 'localhost');
define('DB_NAME', 'username_intrasphere');  // Remplacer par votre nom de BDD
define('DB_USER', 'username_intrasphere');  // Remplacer par votre utilisateur BDD
define('DB_PASS', 'mot_de_passe_fort');     // Remplacer par votre mot de passe

// Configuration de s√©curit√©
define('JWT_SECRET', 'votre_cle_secrete_tres_longue_et_complexe');
define('BCRYPT_ROUNDS', 12);

// Configuration application
define('APP_URL', 'https://votre-domaine.com');
define('UPLOAD_MAX_SIZE', 10485760); // 10MB
define('ALLOWED_FILE_TYPES', ['jpg', 'jpeg', 'png', 'pdf', 'doc', 'docx', 'xls', 'xlsx']);

try {
    $pdo = new PDO(
        "mysql:host=" . DB_HOST . ";dbname=" . DB_NAME . ";charset=utf8mb4",
        DB_USER,
        DB_PASS,
        [
            PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION,
            PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_ASSOC,
            PDO::ATTR_EMULATE_PREPARES => false
        ]
    );
} catch (PDOException $e) {
    error_log("Erreur connexion base de donn√©es: " . $e->getMessage());
    die("Erreur de connexion √† la base de donn√©es");
}
?&gt;
            </div>

            <h4>2. Router principal API</h4>
            <div class="code-block">
                <div class="code-header">public_html/api/index.php</div>
&lt;?php
header('Content-Type: application/json');
header('Access-Control-Allow-Origin: *');
header('Access-Control-Allow-Methods: GET, POST, PUT, DELETE, OPTIONS');
header('Access-Control-Allow-Headers: Content-Type, Authorization');

// G√©rer les requ√™tes OPTIONS (CORS preflight)
if ($_SERVER['REQUEST_METHOD'] === 'OPTIONS') {
    http_response_code(200);
    exit();
}

require_once '../../intrasphere_config/database.php';

$request_uri = $_SERVER['REQUEST_URI'];
$path = parse_url($request_uri, PHP_URL_PATH);
$path = str_replace('/api', '', $path);
$method = $_SERVER['REQUEST_METHOD'];

// Router simple
switch (true) {
    case preg_match('/^\/auth\/login$/', $path) && $method === 'POST':
        require_once 'auth.php';
        handleLogin();
        break;
        
    case preg_match('/^\/announcements$/', $path):
        require_once 'announcements.php';
        handleAnnouncements($method);
        break;
        
    case preg_match('/^\/trainings$/', $path):
        require_once 'trainings.php';
        handleTrainings($method);
        break;
        
    case preg_match('/^\/users$/', $path):
        require_once 'users.php';
        handleUsers($method);
        break;
        
    default:
        http_response_code(404);
        echo json_encode(['error' => 'Endpoint non trouv√©']);
        break;
}
?&gt;
            </div>

            <div class="success">
                <strong>‚úÖ Pr√™t pour l'√©tape suivante:</strong> Une fois cette structure comprise, nous pourrons configurer la base de donn√©es et cr√©er les tables n√©cessaires.
            </div>
            <?php
            break;

        case 3:
            ?>
            <div class="step-header">
                <h2 class="step-title">√âtape 3: Configuration base de donn√©es</h2>
                <p class="step-description">Cr√©ation et configuration de la base de donn√©es MySQL pour IntraSphere</p>
            </div>

            <h3>üóÑÔ∏è Cr√©ation de la base de donn√©es</h3>
            
            <div class="info">
                <strong>üìù Proc√©dure dans cPanel:</strong><br>
                1. Connectez-vous √† votre cPanel<br>
                2. Recherchez "MySQL Database Wizard" ou "Bases de donn√©es MySQL"<br>
                3. Suivez les √©tapes ci-dessous
            </div>

            <h4>√âtape 3.1: Cr√©er la base de donn√©es</h4>
            <div class="checklist">
                <li>Nom de la base: <span class="file-path">intrasphere</span></li>
                <li>Le nom complet sera: <span class="file-path">username_intrasphere</span></li>
                <li>Charset: <span class="file-path">utf8mb4_unicode_ci</span></li>
            </div>

            <h4>√âtape 3.2: Cr√©er l'utilisateur</h4>
            <div class="checklist">
                <li>Nom utilisateur: <span class="file-path">intrasphere</span></li>
                <li>Mot de passe: <strong>G√©n√©rer un mot de passe fort</strong></li>
                <li>Privil√®ges: <strong>TOUS les privil√®ges</strong></li>
            </div>

            <h3>üèóÔ∏è Structure des tables</h3>
            <div class="code-block">
                <div class="code-header">Script SQL - Tables principales</div>
-- Table des utilisateurs
CREATE TABLE users (
    id VARCHAR(36) PRIMARY KEY DEFAULT (UUID()),
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL,
    role ENUM('admin', 'moderator', 'employee') DEFAULT 'employee',
    department VARCHAR(100),
    position VARCHAR(100),
    phone VARCHAR(20),
    avatar_url VARCHAR(500),
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- Table des annonces
CREATE TABLE announcements (
    id VARCHAR(36) PRIMARY KEY DEFAULT (UUID()),
    title VARCHAR(255) NOT NULL,
    content TEXT NOT NULL,
    author_id VARCHAR(36) NOT NULL,
    priority ENUM('low', 'medium', 'high', 'urgent') DEFAULT 'medium',
    category VARCHAR(100),
    is_published BOOLEAN DEFAULT FALSE,
    publish_date DATETIME,
    expiry_date DATETIME,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (author_id) REFERENCES users(id) ON DELETE CASCADE
);

-- Table des formations (nouvelle fonctionnalit√©)
CREATE TABLE trainings (
    id VARCHAR(36) PRIMARY KEY DEFAULT (UUID()),
    title VARCHAR(255) NOT NULL,
    description TEXT,
    category ENUM('technical', 'management', 'safety', 'compliance', 'other') NOT NULL,
    difficulty ENUM('beginner', 'intermediate', 'advanced') DEFAULT 'beginner',
    duration INT NOT NULL, -- en minutes
    instructor_name VARCHAR(255) NOT NULL,
    start_date DATETIME,
    end_date DATETIME,
    location VARCHAR(255),
    max_participants INT,
    current_participants INT DEFAULT 0,
    is_mandatory BOOLEAN DEFAULT FALSE,
    is_active BOOLEAN DEFAULT TRUE,
    is_visible BOOLEAN DEFAULT TRUE,
    thumbnail_url VARCHAR(500),
    document_urls JSON,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- Table des participants aux formations
CREATE TABLE training_participants (
    id VARCHAR(36) PRIMARY KEY DEFAULT (UUID()),
    training_id VARCHAR(36) NOT NULL,
    user_id VARCHAR(36) NOT NULL,
    status ENUM('registered', 'attended', 'completed', 'cancelled') DEFAULT 'registered',
    registration_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    completion_date DATETIME NULL,
    FOREIGN KEY (training_id) REFERENCES trainings(id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    UNIQUE KEY unique_participant (training_id, user_id)
);

-- Table des documents
CREATE TABLE documents (
    id VARCHAR(36) PRIMARY KEY DEFAULT (UUID()),
    title VARCHAR(255) NOT NULL,
    file_name VARCHAR(255) NOT NULL,
    file_path VARCHAR(500) NOT NULL,
    file_size INT NOT NULL,
    mime_type VARCHAR(100) NOT NULL,
    category VARCHAR(100),
    description TEXT,
    uploaded_by VARCHAR(36) NOT NULL,
    is_public BOOLEAN DEFAULT FALSE,
    download_count INT DEFAULT 0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (uploaded_by) REFERENCES users(id) ON DELETE CASCADE
);

-- Table des permissions
CREATE TABLE user_permissions (
    id VARCHAR(36) PRIMARY KEY DEFAULT (UUID()),
    user_id VARCHAR(36) NOT NULL,
    permission VARCHAR(100) NOT NULL,
    granted_by VARCHAR(36) NOT NULL,
    granted_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (granted_by) REFERENCES users(id) ON DELETE CASCADE,
    UNIQUE KEY unique_permission (user_id, permission)
);
            </div>

            <h3>üë§ Donn√©es initiales</h3>
            <div class="code-block">
                <div class="code-header">Script SQL - Utilisateur administrateur</div>
-- Ins√©rer l'utilisateur administrateur par d√©faut
INSERT INTO users (id, name, email, password, role, department, position) VALUES (
    'admin-001',
    'Administrateur Syst√®me',
    'admin@votre-entreprise.com',
    '$2y$12$LQv3c1yqBwrf2oa4.OjxleN9k7rdCVXlwwYFvq0OJ3pQjG.mVH8iG', -- mot de passe: admin123
    'admin',
    'Informatique',
    'Administrateur Syst√®me'
);

-- Permissions pour l'admin
INSERT INTO user_permissions (user_id, permission, granted_by) VALUES 
('admin-001', 'manage_users', 'admin-001'),
('admin-001', 'manage_announcements', 'admin-001'),
('admin-001', 'manage_documents', 'admin-001'),
('admin-001', 'manage_trainings', 'admin-001'),
('admin-001', 'manage_permissions', 'admin-001');

-- Exemple de formation initiale
INSERT INTO trainings (
    id, title, description, category, difficulty, duration, instructor_name, is_visible
) VALUES (
    'training-001',
    'S√©curit√© informatique de base',
    'Formation obligatoire sur les bonnes pratiques de s√©curit√© informatique en entreprise.',
    'technical',
    'beginner',
    120,
    'Service Informatique',
    TRUE
);
            </div>

            <div class="warning">
                <strong>‚ö†Ô∏è S√©curit√©:</strong> Changez imm√©diatement le mot de passe administrateur apr√®s le premier login. Le mot de passe par d√©faut est <code>admin123</code>.
            </div>
            <?php
            break;

        case 4:
            ?>
            <div class="step-header">
                <h2 class="step-title">√âtape 4: Upload des fichiers</h2>
                <p class="step-description">T√©l√©chargement et organisation des fichiers sur votre h√©bergement cPanel</p>
            </div>

            <h3>üì¶ Pr√©paration du build frontend</h3>
            
            <div class="info">
                <strong>üîß Avant de commencer:</strong><br>
                Si vous avez acc√®s au projet en local, ex√©cutez d'abord la commande de build pour g√©n√©rer les fichiers statiques optimis√©s.
            </div>

            <div class="code-block">
                <div class="code-header">Commandes √† ex√©cuter en local (si disponible)</div>
# Aller dans le dossier du projet
cd intrasphere

# Installer les d√©pendances
npm install

# G√©n√©rer le build de production
npm run build

# Le dossier 'dist' ou 'build' contient maintenant les fichiers optimis√©s
            </div>

            <h3>üìÅ Upload via le gestionnaire de fichiers cPanel</h3>

            <h4>M√©thode 1: Upload direct</h4>
            <div class="checklist">
                <li>Connectez-vous √† cPanel</li>
                <li>Ouvrez "Gestionnaire de fichiers" (File Manager)</li>
                <li>Naviguez vers <span class="file-path">public_html/</span></li>
                <li>Cr√©ez les dossiers n√©cessaires</li>
                <li>Uploadez les fichiers un par un</li>
            </div>

            <h4>M√©thode 2: Upload par archive ZIP (Recommand√©e)</h4>
            <div class="checklist">
                <li>Cr√©ez une archive ZIP de vos fichiers frontend</li>
                <li>Uploadez le fichier ZIP dans <span class="file-path">public_html/</span></li>
                <li>Utilisez l'extracteur int√©gr√© de cPanel</li>
                <li>Supprimez le fichier ZIP apr√®s extraction</li>
            </div>

            <h3>üéØ Fichiers √† uploader par section</h3>

            <h4>Frontend (dans public_html/)</h4>
            <div class="code-block">
                <div class="code-header">Liste des fichiers frontend essentiels</div>
public_html/
‚îú‚îÄ‚îÄ index.html                    # Page principale de l'application
‚îú‚îÄ‚îÄ favicon.ico                   # Ic√¥ne du site
‚îú‚îÄ‚îÄ manifest.json                 # Manifest PWA
‚îú‚îÄ‚îÄ static/                       # Assets statiques du build
‚îÇ   ‚îú‚îÄ‚îÄ css/
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ main.[hash].css      # Styles compil√©s
‚îÇ   ‚îú‚îÄ‚îÄ js/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ main.[hash].js       # JavaScript principal
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ [chunk].[hash].js    # Chunks JavaScript
‚îÇ   ‚îî‚îÄ‚îÄ media/                   # Images et autres m√©dias
‚îÇ       ‚îú‚îÄ‚îÄ logo.svg
‚îÇ       ‚îî‚îÄ‚îÄ *.png, *.jpg, etc.
‚îî‚îÄ‚îÄ .htaccess                    # Configuration serveur (√† cr√©er)
            </div>

            <h4>Backend PHP (dans public_html/api/)</h4>
            <div class="code-block">
                <div class="code-header">Scripts PHP √† cr√©er</div>
# Cr√©ez ces fichiers PHP dans public_html/api/

# 1. Router principal
api/index.php

# 2. Authentification
api/auth.php

# 3. Gestion des formations (nouveau)
api/trainings.php

# 4. Gestion des annonces
api/announcements.php

# 5. Gestion des utilisateurs
api/users.php

# 6. Gestion des documents
api/documents.php

# 7. Utilitaires
api/utils.php
            </div>

            <h4>Configuration priv√©e (dans intrasphere_config/)</h4>
            <div class="file-structure">
                <strong>Dossier de configuration (non accessible web):</strong>
                <div class="code-block">
                    <div class="code-header">Configuration priv√©e</div>
# Cr√©ez le dossier en dehors de public_html
/home/username/intrasphere_config/
‚îú‚îÄ‚îÄ database.php              # Configuration BDD
‚îú‚îÄ‚îÄ security.php              # Cl√©s de s√©curit√©
‚îî‚îÄ‚îÄ settings.php              # Param√®tres application
                </div>
            </div>

            <h3>üìù Script PHP pour les formations</h3>
            <div class="code-block">
                <div class="code-header">public_html/api/trainings.php</div>
&lt;?php
require_once '../../intrasphere_config/database.php';

function handleTrainings($method) {
    global $pdo;
    
    switch ($method) {
        case 'GET':
            getTrainings();
            break;
        case 'POST':
            createTraining();
            break;
        case 'PUT':
            updateTraining();
            break;
        case 'DELETE':
            deleteTraining();
            break;
        default:
            http_response_code(405);
            echo json_encode(['error' => 'M√©thode non autoris√©e']);
    }
}

function getTrainings() {
    global $pdo;
    
    try {
        $stmt = $pdo->prepare("
            SELECT t.*, 
                   COUNT(tp.id) as current_participants
            FROM trainings t 
            LEFT JOIN training_participants tp ON t.id = tp.training_id 
            WHERE t.is_visible = TRUE 
            GROUP BY t.id 
            ORDER BY t.created_at DESC
        ");
        $stmt->execute();
        $trainings = $stmt->fetchAll();
        
        echo json_encode($trainings);
    } catch (PDOException $e) {
        http_response_code(500);
        echo json_encode(['error' => 'Erreur lors de la r√©cup√©ration des formations']);
    }
}

function createTraining() {
    global $pdo;
    
    $input = json_decode(file_get_contents('php://input'), true);
    
    // Validation des donn√©es requises
    if (!isset($input['title']) || !isset($input['category']) || !isset($input['duration']) || !isset($input['instructor_name'])) {
        http_response_code(400);
        echo json_encode(['error' => 'Donn√©es manquantes']);
        return;
    }
    
    try {
        $stmt = $pdo->prepare("
            INSERT INTO trainings (
                title, description, category, difficulty, duration, 
                instructor_name, start_date, end_date, location, 
                max_participants, is_mandatory, is_visible
            ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
        ");
        
        $stmt->execute([
            $input['title'],
            $input['description'] ?? '',
            $input['category'],
            $input['difficulty'] ?? 'beginner',
            $input['duration'],
            $input['instructor_name'],
            $input['start_date'] ?? null,
            $input['end_date'] ?? null,
            $input['location'] ?? '',
            $input['max_participants'] ?? null,
            $input['is_mandatory'] ?? false,
            $input['is_visible'] ?? true
        ]);
        
        echo json_encode(['message' => 'Formation cr√©√©e avec succ√®s', 'id' => $pdo->lastInsertId()]);
    } catch (PDOException $e) {
        http_response_code(500);
        echo json_encode(['error' => 'Erreur lors de la cr√©ation de la formation']);
    }
}

// Autres fonctions (updateTraining, deleteTraining) √† impl√©menter...
?&gt;
            </div>

            <div class="success">
                <strong>‚úÖ Fichiers upload√©s:</strong> Une fois tous les fichiers en place, nous pourrons configurer PHP et tester l'application.
            </div>
            <?php
            break;

        // Continuer les autres √©tapes...
        case 5:
            ?>
            <div class="step-header">
                <h2 class="step-title">√âtape 5: Configuration PHP</h2>
                <p class="step-description">Optimisation et configuration de l'environnement PHP pour IntraSphere</p>
            </div>

            <h3>üîß S√©lection de la version PHP</h3>
            
            <div class="info">
                <strong>üìã Version recommand√©e:</strong> PHP 8.1 ou sup√©rieur pour une s√©curit√© et des performances optimales.
            </div>

            <h4>Dans cPanel:</h4>
            <div class="checklist">
                <li>Acc√©dez √† "Select PHP Version" ou "S√©lectionner version PHP"</li>
                <li>Choisissez PHP 8.1, 8.2 ou 8.3 si disponible</li>
                <li>Cliquez sur "Set as current" pour appliquer</li>
            </div>

            <h3>üìö Extensions PHP requises</h3>
            <div class="code-block">
                <div class="code-header">Extensions √† activer</div>
Extensions obligatoires pour IntraSphere:
‚úÖ pdo             # Acc√®s base de donn√©es
‚úÖ pdo_mysql       # Support MySQL
‚úÖ mysqli          # Support MySQL alternatif
‚úÖ openssl         # Chiffrement et JWT
‚úÖ curl            # Requ√™tes HTTP externes
‚úÖ json            # Manipulation JSON
‚úÖ mbstring        # Support cha√Ænes multi-octets
‚úÖ fileinfo        # D√©tection type de fichier
‚úÖ gd              # Manipulation d'images

Extensions optionnelles (recommand√©es):
‚óã zip              # Gestion archives
‚óã xml              # Manipulation XML
‚óã intl             # Internationalisation
‚óã bcmath           # Calculs haute pr√©cision
            </div>

            <h4>Activation des extensions:</h4>
            <div class="checklist">
                <li>Dans "Select PHP Version", cliquez sur "Extensions"</li>
                <li>Cochez toutes les extensions list√©es ci-dessus</li>
                <li>Cliquez sur "Save" pour appliquer les changements</li>
                <li>Attendez quelques secondes pour la prise en compte</li>
            </div>

            <h3>‚öôÔ∏è Configuration PHP (php.ini)</h3>
            <div class="code-block">
                <div class="code-header">Param√®tres recommand√©s</div>
; Limites de m√©moire et temps d'ex√©cution
memory_limit = 256M
max_execution_time = 300
max_input_time = 300

; Upload de fichiers
file_uploads = On
upload_max_filesize = 10M
post_max_size = 10M
max_file_uploads = 20

; Gestion des sessions
session.gc_maxlifetime = 7200
session.cookie_lifetime = 0
session.cookie_secure = 1
session.cookie_httponly = 1

; S√©curit√©
expose_php = Off
allow_url_fopen = Off
allow_url_include = Off

; Erreurs (pour d√©veloppement uniquement)
display_errors = Off
log_errors = On
error_reporting = E_ALL & ~E_NOTICE
            </div>

            <h4>Application de la configuration:</h4>
            <div class="checklist">
                <li>Cr√©ez un fichier <span class="file-path">.user.ini</span> dans <span class="file-path">public_html/</span></li>
                <li>Copiez-y les param√®tres ci-dessus</li>
                <li>Sauvegardez le fichier</li>
                <li>Attendez 5 minutes pour la prise en compte</li>
            </div>

            <h3>üîê Script de test de configuration</h3>
            <div class="code-block">
                <div class="code-header">public_html/test-config.php</div>
&lt;?php
// Script de test de configuration IntraSphere
// ‚ö†Ô∏è SUPPRIMER APR√àS TESTS

echo "&lt;h1&gt;Test Configuration IntraSphere&lt;/h1&gt;";

// Test version PHP
echo "&lt;h2&gt;Version PHP&lt;/h2&gt;";
echo "Version actuelle: " . PHP_VERSION . "&lt;br&gt;";
if (version_compare(PHP_VERSION, '8.1.0') >= 0) {
    echo "&lt;span style='color: green'&gt;‚úÖ Version PHP compatible&lt;/span&gt;&lt;br&gt;";
} else {
    echo "&lt;span style='color: red'&gt;‚ùå Version PHP trop ancienne (minimum 8.1)&lt;/span&gt;&lt;br&gt;";
}

// Test extensions
echo "&lt;h2&gt;Extensions PHP&lt;/h2&gt;";
$required_extensions = ['pdo', 'pdo_mysql', 'mysqli', 'openssl', 'curl', 'json', 'mbstring', 'fileinfo'];

foreach ($required_extensions as $ext) {
    if (extension_loaded($ext)) {
        echo "&lt;span style='color: green'&gt;‚úÖ $ext&lt;/span&gt;&lt;br&gt;";
    } else {
        echo "&lt;span style='color: red'&gt;‚ùå $ext (manquante)&lt;/span&gt;&lt;br&gt;";
    }
}

// Test connexion base de donn√©es
echo "&lt;h2&gt;Connexion Base de Donn√©es&lt;/h2&gt;";
try {
    require_once '../intrasphere_config/database.php';
    echo "&lt;span style='color: green'&gt;‚úÖ Connexion BDD r√©ussie&lt;/span&gt;&lt;br&gt;";
    
    // Test table users
    $stmt = $pdo->query("SELECT COUNT(*) FROM users");
    $count = $stmt->fetchColumn();
    echo "Nombre d'utilisateurs: $count&lt;br&gt;";
    
} catch (Exception $e) {
    echo "&lt;span style='color: red'&gt;‚ùå Erreur BDD: " . $e->getMessage() . "&lt;/span&gt;&lt;br&gt;";
}

// Test permissions fichiers
echo "&lt;h2&gt;Permissions Fichiers&lt;/h2&gt;";
$writable_dirs = ['uploads/', 'api/'];
foreach ($writable_dirs as $dir) {
    if (is_writable($dir)) {
        echo "&lt;span style='color: green'&gt;‚úÖ $dir (√©criture possible)&lt;/span&gt;&lt;br&gt;";
    } else {
        echo "&lt;span style='color: orange'&gt;‚ö†Ô∏è $dir (v√©rifier permissions)&lt;/span&gt;&lt;br&gt;";
    }
}

echo "&lt;p&gt;&lt;strong&gt;‚ö†Ô∏è IMPORTANT: Supprimez ce fichier apr√®s vos tests !&lt;/strong&gt;&lt;/p&gt;";
?&gt;
            </div>

            <div class="warning">
                <strong>üõ°Ô∏è S√©curit√©:</strong> 
                <ol>
                    <li>Acc√©dez √† <code>https://votre-domaine.com/test-config.php</code> pour v√©rifier la configuration</li>
                    <li><strong>Supprimez imm√©diatement</strong> le fichier <code>test-config.php</code> apr√®s les tests</li>
                    <li>Ne jamais laisser de scripts de test en production</li>
                </ol>
            </div>
            <?php
            break;

        case 6:
            ?>
            <div class="step-header">
                <h2 class="step-title">√âtape 6: Configuration .htaccess</h2>
                <p class="step-description">Configuration du serveur web pour une application React SPA et s√©curit√©</p>
            </div>

            <h3>üîß Fichier .htaccess principal</h3>
            
            <div class="info">
                <strong>üìù Objectifs du .htaccess:</strong><br>
                ‚Ä¢ Redirection SPA (Single Page Application)<br>
                ‚Ä¢ Protection des dossiers sensibles<br>
                ‚Ä¢ Optimisation des performances<br>
                ‚Ä¢ Configuration HTTPS et s√©curit√©
            </div>

            <div class="code-block">
                <div class="code-header">public_html/.htaccess</div>
# Configuration IntraSphere - Ne pas modifier sans savoir
# Version: 2.1 - Ao√ªt 2025

# ========================================
# S√âCURIT√â ET PROTECTION
# ========================================

# Protection contre les attaques par injection
&lt;IfModule mod_rewrite.c&gt;
    RewriteEngine On
    
    # Bloquer les tentatives d'injection SQL communes
    RewriteCond %{QUERY_STRING} (\&lt;|%3C)([^s]*s)+cript.*(\&gt;|%3E) [NC,OR]
    RewriteCond %{QUERY_STRING} GLOBALS(=|\[|\%[0-9A-Z]{0,2}) [OR]
    RewriteCond %{QUERY_STRING} _REQUEST(=|\[|\%[0-9A-Z]{0,2}) [OR]
    RewriteCond %{QUERY_STRING} (\&lt;|%3C)([^i]*i)+frame.*(\&gt;|%3E) [NC,OR]
    RewriteCond %{QUERY_STRING} select.*\(.*\) [NC,OR]
    RewriteCond %{QUERY_STRING} union.*select.*\( [NC,OR]
    RewriteCond %{QUERY_STRING} (\&lt;|%3C)([^b]*b)+ody.*(\&gt;|%3E) [NC]
    RewriteRule .* - [F]
&lt;/IfModule&gt;

# Protection des fichiers sensibles
&lt;Files ".htaccess"&gt;
    Order Allow,Deny
    Deny from all
&lt;/Files&gt;

&lt;Files "*.ini"&gt;
    Order Allow,Deny
    Deny from all
&lt;/Files&gt;

&lt;Files "*.log"&gt;
    Order Allow,Deny
    Deny from all
&lt;/Files&gt;

# ========================================
# OPTIMISATION ET CACHE
# ========================================

# Compression GZIP
&lt;IfModule mod_deflate.c&gt;
    AddOutputFilterByType DEFLATE text/plain
    AddOutputFilterByType DEFLATE text/html
    AddOutputFilterByType DEFLATE text/xml
    AddOutputFilterByType DEFLATE text/css
    AddOutputFilterByType DEFLATE application/xml
    AddOutputFilterByType DEFLATE application/xhtml+xml
    AddOutputFilterByType DEFLATE application/rss+xml
    AddOutputFilterByType DEFLATE application/javascript
    AddOutputFilterByType DEFLATE application/x-javascript
    AddOutputFilterByType DEFLATE application/json
&lt;/IfModule&gt;

# Cache des ressources statiques
&lt;IfModule mod_expires.c&gt;
    ExpiresActive On
    ExpiresByType text/css "access plus 1 month"
    ExpiresByType application/javascript "access plus 1 month"
    ExpiresByType application/x-javascript "access plus 1 month"
    ExpiresByType image/png "access plus 1 month"
    ExpiresByType image/jpg "access plus 1 month"
    ExpiresByType image/jpeg "access plus 1 month"
    ExpiresByType image/gif "access plus 1 month"
    ExpiresByType image/svg+xml "access plus 1 month"
    ExpiresByType image/webp "access plus 1 month"
    ExpiresByType font/woff "access plus 1 month"
    ExpiresByType font/woff2 "access plus 1 month"
&lt;/IfModule&gt;

# ========================================
# CONFIGURATION SPA (SINGLE PAGE APP)
# ========================================

&lt;IfModule mod_rewrite.c&gt;
    RewriteEngine On
    
    # Gestion des API (ne pas rediriger)
    RewriteRule ^api/ - [L]
    
    # Gestion des uploads (ne pas rediriger)
    RewriteRule ^uploads/ - [L]
    
    # Fichiers statiques existants (ne pas rediriger)
    RewriteCond %{REQUEST_FILENAME} -f [OR]
    RewriteCond %{REQUEST_FILENAME} -d
    RewriteRule ^ - [L]
    
    # Redirection SPA - tout le reste vers index.html
    RewriteRule ^ index.html [L]
&lt;/IfModule&gt;

# ========================================
# S√âCURIT√â AVANC√âE
# ========================================

# Headers de s√©curit√©
&lt;IfModule mod_headers.c&gt;
    # Protection XSS
    Header always set X-XSS-Protection "1; mode=block"
    
    # Protection contre le d√©tournement de type MIME
    Header always set X-Content-Type-Options "nosniff"
    
    # Protection contre le clickjacking
    Header always set X-Frame-Options "SAMEORIGIN"
    
    # Politique de s√©curit√© du contenu (CSP) - √Ä adapter selon vos besoins
    Header always set Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self'"
    
    # HSTS (si HTTPS activ√©)
    # Header always set Strict-Transport-Security "max-age=63072000; includeSubDomains; preload"
&lt;/IfModule&gt;

# D√©sactiver la signature du serveur
ServerTokens Prod

# ========================================
# GESTION DES ERREURS
# ========================================

# Pages d'erreur personnalis√©es
ErrorDocument 404 /index.html
ErrorDocument 403 /index.html
ErrorDocument 500 /index.html

# ========================================
# UPLOADS ET T√âL√âCHARGEMENTS
# ========================================

# Limitation de la taille des requ√™tes
LimitRequestBody 10485760 # 10MB

# Types MIME pour les nouveaux formats
AddType application/json .json
AddType application/javascript .js
AddType text/css .css
AddType image/webp .webp
AddType font/woff .woff
AddType font/woff2 .woff2
            </div>

            <h3>üõ°Ô∏è Protection du dossier de configuration</h3>
            <div class="code-block">
                <div class="code-header">intrasphere_config/.htaccess</div>
# Protection totale du dossier de configuration
# AUCUN ACC√àS WEB AUTORIS√â

Order Deny,Allow
Deny from all

# M√™me pour les scripts PHP
&lt;Files "*.php"&gt;
    Order Deny,Allow
    Deny from all
&lt;/Files&gt;

# Protection des fichiers de configuration
&lt;Files "*.ini"&gt;
    Order Deny,Allow
    Deny from all
&lt;/Files&gt;

&lt;Files "*.conf"&gt;
    Order Deny,Allow
    Deny from all
&lt;/Files&gt;
            </div>

            <h3>üîí Protection du dossier API</h3>
            <div class="code-block">
                <div class="code-header">public_html/api/.htaccess</div>
# Configuration API IntraSphere

# Headers CORS pour l'API
&lt;IfModule mod_headers.c&gt;
    Header always set Access-Control-Allow-Origin "*"
    Header always set Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS"
    Header always set Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With"
    Header always set Access-Control-Max-Age "3600"
&lt;/IfModule&gt;

# Gestion des requ√™tes OPTIONS (preflight CORS)
&lt;IfModule mod_rewrite.c&gt;
    RewriteEngine On
    RewriteCond %{REQUEST_METHOD} OPTIONS
    RewriteRule ^(.*)$ $1 [R=200,L]
&lt;/IfModule&gt;

# Protection contre l'acc√®s direct aux fichiers sensibles
&lt;Files "config.php"&gt;
    Order Deny,Allow
    Deny from all
&lt;/Files&gt;

&lt;Files "*.inc"&gt;
    Order Deny,Allow
    Deny from all
&lt;/Files&gt;

# Limitation de taille pour l'API
LimitRequestBody 10485760 # 10MB

# Cache d√©sactiv√© pour l'API
&lt;IfModule mod_headers.c&gt;
    Header always set Cache-Control "no-cache, no-store, must-revalidate"
    Header always set Pragma "no-cache"
    Header always set Expires "0"
&lt;/IfModule&gt;
            </div>

            <h3>üìÇ Protection du dossier uploads</h3>
            <div class="code-block">
                <div class="code-header">public_html/uploads/.htaccess</div>
# Configuration dossier uploads IntraSphere

# Interdire l'ex√©cution de scripts
&lt;Files "*.php"&gt;
    Order Deny,Allow
    Deny from all
&lt;/Files&gt;

&lt;Files "*.php3"&gt;
    Order Deny,Allow
    Deny from all
&lt;/Files&gt;

&lt;Files "*.php4"&gt;
    Order Deny,Allow
    Deny from all
&lt;/Files&gt;

&lt;Files "*.php5"&gt;
    Order Deny,Allow
    Deny from all
&lt;/Files&gt;

&lt;Files "*.phtml"&gt;
    Order Deny,Allow
    Deny from all
&lt;/Files&gt;

&lt;Files "*.pl"&gt;
    Order Deny,Allow
    Deny from all
&lt;/Files&gt;

&lt;Files "*.py"&gt;
    Order Deny,Allow
    Deny from all
&lt;/Files&gt;

&lt;Files "*.cgi"&gt;
    Order Deny,Allow
    Deny from all
&lt;/Files&gt;

# Types de fichiers autoris√©s uniquement
&lt;FilesMatch "\.(jpg|jpeg|png|gif|pdf|doc|docx|xls|xlsx|ppt|pptx|txt|zip)$"&gt;
    Order Allow,Deny
    Allow from all
&lt;/FilesMatch&gt;

# Refuser tout le reste
&lt;FilesMatch "^(?!.*\.(jpg|jpeg|png|gif|pdf|doc|docx|xls|xlsx|ppt|pptx|txt|zip)$).*$"&gt;
    Order Deny,Allow
    Deny from all
&lt;/FilesMatch&gt;
            </div>

            <div class="warning">
                <strong>‚ö†Ô∏è Test obligatoire:</strong> Apr√®s avoir mis en place ces fichiers .htaccess, testez imm√©diatement:
                <ul>
                    <li>L'acc√®s √† votre site principal</li>
                    <li>Le fonctionnement des API (devrait retourner du JSON)</li>
                    <li>La protection des dossiers sensibles</li>
                    <li>Les redirections SPA</li>
                </ul>
            </div>
            <?php
            break;

        case 7:
            ?>
            <div class="step-header">
                <h2 class="step-title">√âtape 7: Tests et v√©rifications</h2>
                <p class="step-description">Validation compl√®te du d√©ploiement et r√©solution des probl√®mes</p>
            </div>

            <h3>üß™ Liste de tests obligatoires</h3>

            <h4>1. Test de connectivit√© de base</h4>
            <div class="checklist">
                <li>Acc√®s au domaine principal: <span class="file-path">https://votre-domaine.com</span></li>
                <li>Chargement de l'interface IntraSphere</li>
                <li>Absence d'erreurs 404 sur les ressources statiques</li>
                <li>Fonctionnement des redirections SPA</li>
            </div>

            <h4>2. Test des API</h4>
            <div class="code-block">
                <div class="code-header">Tests d'API via curl ou navigateur</div>
# Test de l'API principale
curl -X GET "https://votre-domaine.com/api/"
# R√©sultat attendu: {"error": "Endpoint non trouv√©"} avec code 404

# Test API formations
curl -X GET "https://votre-domaine.com/api/trainings"
# R√©sultat attendu: Liste JSON des formations

# Test API utilisateurs (n√©cessite authentification)
curl -X GET "https://votre-domaine.com/api/users"
# R√©sultat attendu: Erreur d'authentification

# Test CORS (depuis la console du navigateur)
fetch('https://votre-domaine.com/api/trainings')
  .then(response => response.json())
  .then(data => console.log(data));
            </div>

            <h4>3. Test de l'authentification</h4>
            <div class="code-block">
                <div class="code-header">Test de connexion administrateur</div>
# Via l'interface web ou API directe
curl -X POST "https://votre-domaine.com/api/auth/login" \
  -H "Content-Type: application/json" \
  -d '{"email":"admin@votre-entreprise.com","password":"admin123"}'

# R√©sultat attendu: Token JWT et informations utilisateur
            </div>

            <h3>üîç Diagnostic des probl√®mes courants</h3>

            <h4>Probl√®me: Page blanche ou erreur 500</h4>
            <div class="info">
                <strong>Solutions √† tenter:</strong>
                <ol>
                    <li>V√©rifiez les logs d'erreur dans cPanel</li>
                    <li>V√©rifiez la syntaxe du fichier .htaccess</li>
                    <li>Confirmez les permissions des fichiers (644 pour les fichiers, 755 pour les dossiers)</li>
                    <li>Testez en renommant temporairement .htaccess en .htaccess_backup</li>
                </ol>
            </div>

            <h4>Probl√®me: API retourne des erreurs</h4>
            <div class="info">
                <strong>V√©rifications:</strong>
                <ol>
                    <li>Configuration base de donn√©es dans <code>intrasphere_config/database.php</code></li>
                    <li>Extensions PHP activ√©es (PDO, MySQL)</li>
                    <li>Chemins des includes dans les scripts PHP</li>
                    <li>Headers CORS configur√©s correctement</li>
                </ol>
            </div>

            <h4>Probl√®me: Routing SPA ne fonctionne pas</h4>
            <div class="code-block">
                <div class="code-header">Test de redirection SPA</div>
# Ces URLs doivent toutes rediriger vers index.html
https://votre-domaine.com/announcements
https://votre-domaine.com/trainings
https://votre-domaine.com/admin
https://votre-domaine.com/n-importe-quoi

# Ces URLs ne doivent PAS rediriger
https://votre-domaine.com/api/trainings
https://votre-domaine.com/uploads/fichier.pdf
https://votre-domaine.com/static/css/main.css
            </div>

            <h3>üõ†Ô∏è Script de diagnostic automatique</h3>
            <div class="code-block">
                <div class="code-header">public_html/diagnostic.php</div>
&lt;?php
// Script de diagnostic IntraSphere
// ‚ö†Ô∏è SUPPRIMER APR√àS UTILISATION

header('Content-Type: text/html; charset=utf-8');

echo "&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;title&gt;Diagnostic IntraSphere&lt;/title&gt;&lt;/head&gt;&lt;body&gt;";
echo "&lt;h1&gt;üîç Diagnostic IntraSphere&lt;/h1&gt;";

$tests = [];

// Test 1: Configuration PHP
$tests['PHP'] = [];
$tests['PHP']['Version'] = version_compare(PHP_VERSION, '8.1.0') >= 0 ? '‚úÖ' : '‚ùå';
$tests['PHP']['PDO'] = extension_loaded('pdo') ? '‚úÖ' : '‚ùå';
$tests['PHP']['MySQL'] = extension_loaded('pdo_mysql') ? '‚úÖ' : '‚ùå';
$tests['PHP']['OpenSSL'] = extension_loaded('openssl') ? '‚úÖ' : '‚ùå';
$tests['PHP']['JSON'] = extension_loaded('json') ? '‚úÖ' : '‚ùå';

// Test 2: Fichiers et dossiers
$tests['Fichiers'] = [];
$tests['Fichiers']['index.html'] = file_exists('index.html') ? '‚úÖ' : '‚ùå';
$tests['Fichiers']['api/index.php'] = file_exists('api/index.php') ? '‚úÖ' : '‚ùå';
$tests['Fichiers']['config DB'] = file_exists('../intrasphere_config/database.php') ? '‚úÖ' : '‚ùå';
$tests['Fichiers']['.htaccess'] = file_exists('.htaccess') ? '‚úÖ' : '‚ùå';

// Test 3: Permissions
$tests['Permissions'] = [];
$tests['Permissions']['uploads/'] = is_writable('uploads/') ? '‚úÖ' : '‚ùå';
$tests['Permissions']['api/'] = is_readable('api/') ? '‚úÖ' : '‚ùå';

// Test 4: Base de donn√©es
$tests['Base de donn√©es'] = [];
try {
    require_once '../intrasphere_config/database.php';
    $tests['Base de donn√©es']['Connexion'] = '‚úÖ';
    
    $stmt = $pdo->query("SHOW TABLES");
    $tables = $stmt->fetchAll(PDO::FETCH_COLUMN);
    $required_tables = ['users', 'announcements', 'trainings', 'training_participants', 'documents', 'user_permissions'];
    
    foreach ($required_tables as $table) {
        $tests['Base de donn√©es']["Table $table"] = in_array($table, $tables) ? '‚úÖ' : '‚ùå';
    }
    
} catch (Exception $e) {
    $tests['Base de donn√©es']['Connexion'] = '‚ùå ' . $e->getMessage();
}

// Test 5: API
$tests['API'] = [];
$api_tests = [
    'GET /api/trainings' => 'api/trainings.php',
    'GET /api/announcements' => 'api/announcements.php',
    'POST /api/auth/login' => 'api/auth.php'
];

foreach ($api_tests as $endpoint => $file) {
    $tests['API'][$endpoint] = file_exists($file) ? '‚úÖ' : '‚ùå';
}

// Affichage des r√©sultats
foreach ($tests as $category => $category_tests) {
    echo "&lt;h2&gt;$category&lt;/h2&gt;&lt;ul&gt;";
    foreach ($category_tests as $test => $result) {
        echo "&lt;li&gt;&lt;strong&gt;$test:&lt;/strong&gt; $result&lt;/li&gt;";
    }
    echo "&lt;/ul&gt;";
}

// Informations syst√®me utiles
echo "&lt;h2&gt;Informations syst√®me&lt;/h2&gt;";
echo "&lt;ul&gt;";
echo "&lt;li&gt;&lt;strong&gt;Version PHP:&lt;/strong&gt; " . PHP_VERSION . "&lt;/li&gt;";
echo "&lt;li&gt;&lt;strong&gt;Serveur:&lt;/strong&gt; " . $_SERVER['SERVER_SOFTWARE'] . "&lt;/li&gt;";
echo "&lt;li&gt;&lt;strong&gt;Document Root:&lt;/strong&gt; " . $_SERVER['DOCUMENT_ROOT'] . "&lt;/li&gt;";
echo "&lt;li&gt;&lt;strong&gt;User Agent:&lt;/strong&gt; " . $_SERVER['HTTP_USER_AGENT'] . "&lt;/li&gt;";
echo "&lt;/ul&gt;";

echo "&lt;h2&gt;Actions recommand√©es&lt;/h2&gt;";
echo "&lt;ol&gt;";
echo "&lt;li&gt;Corrigez tous les √©l√©ments marqu√©s ‚ùå&lt;/li&gt;";
echo "&lt;li&gt;Testez l'interface utilisateur&lt;/li&gt;";
echo "&lt;li&gt;Testez la connexion admin&lt;/li&gt;";
echo "&lt;li&gt;&lt;strong&gt;Supprimez ce fichier diagnostic.php&lt;/strong&gt;&lt;/li&gt;";
echo "&lt;/ol&gt;";

echo "&lt;p style='color: red; font-weight: bold;'&gt;‚ö†Ô∏è SUPPRIMEZ CE FICHIER IMM√âDIATEMENT APR√àS LE DIAGNOSTIC&lt;/p&gt;";
echo "&lt;/body&gt;&lt;/html&gt;";
?&gt;
            </div>

            <h3>üìä Checklist finale</h3>
            <div class="checklist">
                <li>‚úÖ Site principal accessible sans erreurs</li>
                <li>‚úÖ API r√©pond correctement au format JSON</li>
                <li>‚úÖ Connexion administrateur fonctionnelle</li>
                <li>‚úÖ Redirections SPA op√©rationnelles</li>
                <li>‚úÖ Dossiers sensibles prot√©g√©s</li>
                <li>‚úÖ Uploads s√©curis√©s</li>
                <li>‚úÖ HTTPS activ√© (recommand√©)</li>
                <li>‚úÖ Sauvegarde de la base de donn√©es effectu√©e</li>
            </div>

            <div class="success">
                <strong>üéâ Tests r√©ussis :</strong> Si tous les tests passent, votre installation IntraSphere est pr√™te pour la production !
            </div>
            <?php
            break;

        case 8:
            ?>
            <div class="step-header">
                <h2 class="step-title">√âtape 8: Mise en production</h2>
                <p class="step-description">Finalisation et optimisations pour un environnement de production s√©curis√©</p>
            </div>

            <h3>üîí S√©curisation finale</h3>

            <h4>1. Suppression des fichiers de test</h4>
            <div class="checklist">
                <li>Supprimez <span class="file-path">test-config.php</span></li>
                <li>Supprimez <span class="file-path">diagnostic.php</span></li>
                <li>Supprimez tous les fichiers <span class="file-path">phpinfo.php</span></li>
                <li>V√©rifiez qu'aucun script de test ne reste</li>
            </div>

            <h4>2. Configuration de production</h4>
            <div class="code-block">
                <div class="code-header">intrasphere_config/production.php</div>
&lt;?php
// Configuration de production IntraSphere

// D√©sactiver l'affichage des erreurs
ini_set('display_errors', 0);
ini_set('display_startup_errors', 0);
error_reporting(E_ALL & ~E_NOTICE & ~E_DEPRECATED);

// Activer la journalisation des erreurs
ini_set('log_errors', 1);
ini_set('error_log', '/home/username/logs/intrasphere_errors.log');

// Configuration de session s√©curis√©e
ini_set('session.cookie_httponly', 1);
ini_set('session.cookie_secure', 1);
ini_set('session.use_strict_mode', 1);

// Headers de s√©curit√© suppl√©mentaires
header('X-Powered-By: IntraSphere');
header_remove('X-Powered-By');

// Configuration JWT pour production
define('JWT_EXPIRY', 3600); // 1 heure
define('REFRESH_TOKEN_EXPIRY', 86400 * 7); // 7 jours

// Limitation des tentatives de connexion
define('MAX_LOGIN_ATTEMPTS', 5);
define('LOGIN_LOCKOUT_TIME', 900); // 15 minutes

// Mode debug d√©sactiv√©
define('DEBUG_MODE', false);
define('LOG_LEVEL', 'ERROR');
?&gt;
            </div>

            <h3>üöÄ Optimisations de performance</h3>

            <h4>1. Mise en cache avanc√©e</h4>
            <div class="code-block">
                <div class="code-header">Ajout au .htaccess principal</div>
# Cache avanc√© pour les API (√† ajouter √† la fin de public_html/.htaccess)
&lt;LocationMatch "^/api/(announcements|trainings|users)$"&gt;
    ExpiresActive On
    ExpiresDefault "access plus 5 minutes"
&lt;/LocationMatch&gt;

# Cache long pour les assets statiques
&lt;LocationMatch "\.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2)$"&gt;
    ExpiresActive On
    ExpiresDefault "access plus 1 year"
    Header append Cache-Control "public, immutable"
&lt;/LocationMatch&gt;

# Pr√©chargement des ressources critiques
&lt;IfModule mod_headers.c&gt;
    # Pr√©charger les polices importantes
    Header add Link "&lt;/static/css/main.css&gt;; rel=preload; as=style"
    Header add Link "&lt;/static/js/main.js&gt;; rel=preload; as=script"
&lt;/IfModule&gt;
            </div>

            <h4>2. Optimisation base de donn√©es</h4>
            <div class="code-block">
                <div class="code-header">Optimisations MySQL √† ex√©cuter</div>
-- Index pour am√©liorer les performances
CREATE INDEX idx_users_email ON users(email);
CREATE INDEX idx_users_role ON users(role);
CREATE INDEX idx_announcements_published ON announcements(is_published, publish_date);
CREATE INDEX idx_trainings_visible ON trainings(is_visible, start_date);
CREATE INDEX idx_training_participants_user ON training_participants(user_id);
CREATE INDEX idx_training_participants_training ON training_participants(training_id);

-- Optimisation des tables
OPTIMIZE TABLE users;
OPTIMIZE TABLE announcements;
OPTIMIZE TABLE trainings;
OPTIMIZE TABLE training_participants;
OPTIMIZE TABLE documents;
OPTIMIZE TABLE user_permissions;
            </div>

            <h3>üìã Checklist de mise en production</h3>

            <h4>S√©curit√© ‚úÖ</h4>
            <div class="checklist">
                <li>Mot de passe administrateur chang√©</li>
                <li>Certificat SSL activ√© et configur√©</li>
                <li>Fichiers de test supprim√©s</li>
                <li>Permissions fichiers v√©rifi√©es (644/755)</li>
                <li>Configuration erreurs en mode production</li>
                <li>Headers de s√©curit√© activ√©s</li>
                <li>Protection CSRF impl√©ment√©e</li>
            </div>

            <h4>Performance ‚úÖ</h4>
            <div class="checklist">
                <li>Compression GZIP activ√©e</li>
                <li>Cache navigateur configur√©</li>
                <li>Index base de donn√©es optimis√©s</li>
                <li>Assets minifi√©s et optimis√©s</li>
                <li>CDN configur√© (optionnel)</li>
            </div>

            <h4>Monitoring ‚úÖ</h4>
            <div class="checklist">
                <li>Logs d'erreur configur√©s</li>
                <li>Monitoring des performances en place</li>
                <li>Alertes de s√©curit√© configur√©es</li>
                <li>Sauvegarde automatique activ√©e</li>
                <li>Plan de maintenance d√©fini</li>
            </div>

            <h3>üìû Support et maintenance</h3>

            <h4>Contacts importants</h4>
            <div class="file-structure">
                <strong>Informations √† conserver:</strong>
                <ul>
                    <li><strong>H√©bergeur:</strong> Support technique de votre h√©bergeur</li>
                    <li><strong>Base de donn√©es:</strong> Acc√®s cPanel MySQL</li>
                    <li><strong>Domaine:</strong> Gestionnaire de DNS</li>
                    <li><strong>SSL:</strong> Renouvellement certificat</li>
                    <li><strong>Sauvegardes:</strong> Emplacement et fr√©quence</li>
                </ul>
            </div>

            <h4>Maintenance r√©guli√®re</h4>
            <div class="checklist">
                <li><strong>Hebdomadaire:</strong> V√©rification des logs d'erreur</li>
                <li><strong>Mensuel:</strong> Sauvegarde compl√®te base de donn√©es</li>
                <li><strong>Trimestriel:</strong> Mise √† jour PHP si disponible</li>
                <li><strong>Semestriel:</strong> Audit de s√©curit√© complet</li>
                <li><strong>Annuel:</strong> Renouvellement certificat SSL</li>
            </div>

            <div class="success">
                <strong>üéä F√©licitations !</strong><br>
                Votre plateforme IntraSphere est maintenant d√©ploy√©e et s√©curis√©e pour la production. L'application est accessible √† vos utilisateurs avec toutes les fonctionnalit√©s de gestion des formations, annonces, documents et plus encore.
                <br><br>
                <strong>URL d'acc√®s:</strong> <a href="https://votre-domaine.com" target="_blank">https://votre-domaine.com</a><br>
                <strong>Administration:</strong> <a href="https://votre-domaine.com/admin" target="_blank">https://votre-domaine.com/admin</a>
            </div>
            <?php
            break;
    }
}

function renderNodeJSSteps($step) {
    // Impl√©mentation des √©tapes Node.js - Version compl√®te
    switch ($step) {
        case 1:
            ?>
            <div class="step-header">
                <h2 class="step-title">√âtape 1: V√©rification du support Node.js</h2>
                <p class="step-description">Validation de la compatibilit√© Node.js de votre h√©bergement cPanel</p>
            </div>

            <div class="info">
                <strong>üìã Pr√©requis Node.js pour IntraSphere:</strong><br>
                ‚Ä¢ Node.js 18.x ou sup√©rieur<br>
                ‚Ä¢ npm ou yarn pour la gestion des packages<br>
                ‚Ä¢ Support des applications Express.js<br>
                ‚Ä¢ Base de donn√©es MySQL ou PostgreSQL
            </div>

            <h3>üîç V√©rification dans cPanel</h3>
            <div class="checklist">
                <li>Connectez-vous √† votre cPanel</li>
                <li>Recherchez "Setup Node.js App" ou "Node.js Selector"</li>
                <li>V√©rifiez les versions Node.js disponibles</li>
                <li>Confirmez la possibilit√© de cr√©er une application</li>
            </div>

            <h4>Si Node.js n'est pas disponible:</h4>
            <div class="warning">
                <strong>‚ö†Ô∏è H√©bergeurs supportant Node.js:</strong>
                <ul>
                    <li><strong>A2 Hosting:</strong> Support Node.js sur plans partag√©s</li>
                    <li><strong>InMotion Hosting:</strong> Node.js disponible</li>
                    <li><strong>Hostinger:</strong> Support sur plans Business et sup√©rieurs</li>
                    <li><strong>Namecheap:</strong> Node.js sur plans partag√©s et VPS</li>
                    <li><strong>Bluehost:</strong> VPS et serveurs d√©di√©s uniquement</li>
                </ul>
                <br>
                <strong>Alternative:</strong> Si votre h√©bergeur ne supporte pas Node.js, suivez le guide "H√©bergement Traditionnel" √† la place.
            </div>

            <h3>üèóÔ∏è Architecture cible pour Node.js</h3>
            <div class="file-structure">
                <strong>Structure de d√©ploiement Node.js:</strong>
                <div class="code-block">
                    <div class="code-header">Structure cPanel Node.js</div>
/home/username/
‚îú‚îÄ‚îÄ intrasphere_app/              # Application Node.js (non web-accessible)
‚îÇ   ‚îú‚îÄ‚îÄ package.json             # D√©pendances et scripts
‚îÇ   ‚îú‚îÄ‚îÄ server/                  # Backend Express
‚îÇ   ‚îú‚îÄ‚îÄ client/                  # Frontend build
‚îÇ   ‚îú‚îÄ‚îÄ shared/                  # Types partag√©s
‚îÇ   ‚îú‚îÄ‚îÄ node_modules/            # D√©pendances install√©es
‚îÇ   ‚îî‚îÄ‚îÄ .env                     # Variables d'environnement
‚îú‚îÄ‚îÄ public_html/                 # Web root (optionnel pour assets statiques)
‚îÇ   ‚îî‚îÄ‚îÄ .htaccess               # Redirections vers l'app Node.js
‚îî‚îÄ‚îÄ tmp/                        # Fichiers temporaires
                </div>
            </div>

            <h3>üéØ Compatibilit√© des fonctionnalit√©s</h3>
            <div class="success">
                <strong>‚úÖ Fonctionnalit√©s support√©es avec Node.js:</strong>
                <ul>
                    <li>Syst√®me de formations complet avec CRUD</li>
                    <li>Gestion des participants et inscriptions</li>
                    <li>API temps r√©el avec WebSockets</li>
                    <li>Upload de fichiers multim√©dia</li>
                    <li>Authentification JWT avanc√©e</li>
                    <li>Base de donn√©es PostgreSQL ou MySQL</li>
                    <li>Cache Redis (si support√©)</li>
                    <li>Notifications push</li>
                </ul>
            </div>
            <?php
            break;

        case 2:
            ?>
            <div class="step-header">
                <h2 class="step-title">√âtape 2: Pr√©paration de l'application</h2>
                <p class="step-description">Adaptation du projet IntraSphere pour le d√©ploiement Node.js</p>
            </div>

            <h3>üîß Modifications du package.json</h3>
            <div class="code-block">
                <div class="code-header">package.json pour production</div>
{
  "name": "intrasphere",
  "version": "2.1.0",
  "description": "Plateforme Intranet d'Entreprise",
  "main": "server/index.js",
  "type": "module",
  "scripts": {
    "start": "node server/index.js",
    "dev": "concurrently \"npm run server\" \"npm run client\"",
    "server": "tsx watch server/index.ts",
    "client": "vite",
    "build": "npm run build:client && npm run build:server",
    "build:client": "vite build",
    "build:server": "tsc --project tsconfig.server.json",
    "postinstall": "npm run build"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "dependencies": {
    "express": "^4.18.2",
    "cors": "^2.8.5",
    "helmet": "^7.0.0",
    "compression": "^1.7.4",
    "morgan": "^1.10.0",
    "jsonwebtoken": "^9.0.2",
    "bcryptjs": "^2.4.3",
    "joi": "^17.9.2",
    "multer": "^1.4.5-lts.1",
    "pg": "^8.11.3",
    "mysql2": "^3.6.0",
    "dotenv": "^16.3.1",
    "express-rate-limit": "^6.8.1",
    "express-validator": "^7.0.1"
  },
  "devDependencies": {
    "@types/node": "^20.5.0",
    "@types/express": "^4.17.17",
    "@types/cors": "^2.8.13",
    "@types/compression": "^1.7.2",
    "@types/morgan": "^1.9.4",
    "@types/jsonwebtoken": "^9.0.2",
    "@types/bcryptjs": "^2.4.2",
    "@types/multer": "^1.4.7",
    "@types/pg": "^8.10.2",
    "typescript": "^5.1.6",
    "tsx": "^3.12.7",
    "concurrently": "^8.2.0",
    "vite": "^4.4.9"
  }
}
                </div>
            </div>

            <h3>‚öôÔ∏è Configuration d'environnement</h3>
            <div class="code-block">
                <div class="code-header">.env.production (√† cr√©er)</div>
# Configuration de production IntraSphere
NODE_ENV=production
PORT=3000

# Base de donn√©es (MySQL)
DB_HOST=localhost
DB_PORT=3306
DB_NAME=username_intrasphere
DB_USER=username_intrasphere
DB_PASSWORD=mot_de_passe_fort

# Ou PostgreSQL (si support√©)
# DATABASE_URL=postgresql://username:password@localhost:5432/intrasphere

# S√©curit√©
JWT_SECRET=votre_cle_jwt_tres_longue_et_complexe_minimum_32_caracteres
JWT_EXPIRY=1h
REFRESH_TOKEN_SECRET=autre_cle_tres_longue_pour_refresh_tokens
SESSION_SECRET=cle_session_tres_complexe_aussi

# Upload et stockage
UPLOAD_DIR=/home/username/intrasphere_app/uploads
MAX_FILE_SIZE=10485760
ALLOWED_FILE_TYPES=jpg,jpeg,png,gif,pdf,doc,docx,xls,xlsx,ppt,pptx

# Email (optionnel)
SMTP_HOST=smtp.votre-domaine.com
SMTP_PORT=587
SMTP_USER=noreply@votre-domaine.com
SMTP_PASSWORD=mot_de_passe_email

# Application
APP_URL=https://votre-domaine.com
FRONTEND_URL=https://votre-domaine.com
API_PREFIX=/api

# Logs
LOG_LEVEL=info
LOG_FILE=/home/username/logs/intrasphere.log

# Rate limiting
RATE_LIMIT_WINDOW=15
RATE_LIMIT_MAX=100

# Cache (si Redis disponible)
REDIS_URL=redis://localhost:6379
CACHE_TTL=3600
                </div>
            </div>

            <h3>üóÇÔ∏è Adaptation de la structure serveur</h3>
            <div class="code-block">
                <div class="code-header">server/index.ts (point d'entr√©e)</div>
import express from 'express';
import cors from 'cors';
import helmet from 'helmet';
import compression from 'compression';
import morgan from 'morgan';
import path from 'path';
import { fileURLToPath } from 'url';
import dotenv from 'dotenv';
import rateLimit from 'express-rate-limit';

// Configuration
dotenv.config();
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

const app = express();
const PORT = process.env.PORT || 3000;

// Middleware de s√©curit√©
app.use(helmet({
  contentSecurityPolicy: {
    directives: {
      defaultSrc: ["'self'"],
      scriptSrc: ["'self'", "'unsafe-inline'", "'unsafe-eval'"],
      styleSrc: ["'self'", "'unsafe-inline'"],
      imgSrc: ["'self'", "data:", "https:"],
      connectSrc: ["'self'"],
      fontSrc: ["'self'", "data:"],
      objectSrc: ["'none'"],
      mediaSrc: ["'self'"],
      frameSrc: ["'none'"],
    },
  },
}));

// Limitation de taux
const limiter = rateLimit({
  windowMs: parseInt(process.env.RATE_LIMIT_WINDOW || '15') * 60 * 1000,
  max: parseInt(process.env.RATE_LIMIT_MAX || '100'),
  message: { error: 'Trop de requ√™tes, veuillez r√©essayer plus tard.' },
  standardHeaders: true,
  legacyHeaders: false,
});
app.use('/api', limiter);

// Middleware g√©n√©ral
app.use(compression());
app.use(cors({
  origin: process.env.FRONTEND_URL || 'https://votre-domaine.com',
  credentials: true,
  methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],
  allowedHeaders: ['Content-Type', 'Authorization', 'X-Requested-With']
}));

app.use(morgan(process.env.NODE_ENV === 'production' ? 'combined' : 'dev'));
app.use(express.json({ limit: '10mb' }));
app.use(express.urlencoded({ extended: true, limit: '10mb' }));

// Servir les fichiers statiques (build React)
const clientBuildPath = path.join(__dirname, '../client/dist');
app.use(express.static(clientBuildPath));

// Routes API
import { registerRoutes } from './routes.js';
registerRoutes(app);

// Route catch-all pour SPA (doit √™tre en dernier)
app.get('*', (req, res) => {
  // Ne pas intercepter les routes API
  if (req.path.startsWith('/api')) {
    return res.status(404).json({ error: 'Endpoint API non trouv√©' });
  }
  
  // Servir index.html pour toutes les autres routes
  res.sendFile(path.join(clientBuildPath, 'index.html'));
});

// Gestion d'erreur globale
app.use((err: any, req: express.Request, res: express.Response, next: express.NextFunction) => {
  console.error('Erreur serveur:', err);
  
  if (process.env.NODE_ENV === 'production') {
    res.status(500).json({ error: 'Erreur interne du serveur' });
  } else {
    res.status(500).json({ 
      error: 'Erreur interne du serveur',
      details: err.message,
      stack: err.stack
    });
  }
});

// D√©marrage du serveur
app.listen(PORT, '0.0.0.0', () => {
  console.log(`üöÄ IntraSphere d√©marr√© sur le port ${PORT}`);
  console.log(`üìù Environnement: ${process.env.NODE_ENV}`);
  console.log(`üåê URL: ${process.env.APP_URL}`);
});

export default app;
                </div>
            </div>

            <h3>üóÑÔ∏è Configuration base de donn√©es</h3>
            <div class="code-block">
                <div class="code-header">server/database.ts</div>
import mysql from 'mysql2/promise';
import { Pool } from 'pg';
import dotenv from 'dotenv';

dotenv.config();

// Configuration MySQL (par d√©faut pour cPanel)
export const mysqlPool = mysql.createPool({
  host: process.env.DB_HOST || 'localhost',
  port: parseInt(process.env.DB_PORT || '3306'),
  user: process.env.DB_USER,
  password: process.env.DB_PASSWORD,
  database: process.env.DB_NAME,
  waitForConnections: true,
  connectionLimit: 10,
  queueLimit: 0,
  ssl: process.env.DB_SSL === 'true' ? { rejectUnauthorized: false } : false,
  timezone: '+00:00'
});

// Configuration PostgreSQL (si disponible)
export const pgPool = process.env.DATABASE_URL ? new Pool({
  connectionString: process.env.DATABASE_URL,
  ssl: process.env.NODE_ENV === 'production' ? { rejectUnauthorized: false } : false,
  max: 10,
  idleTimeoutMillis: 30000,
  connectionTimeoutMillis: 2000,
}) : null;

// Fonction utilitaire pour les requ√™tes MySQL
export async function executeQuery(query: string, params: any[] = []) {
  try {
    const [results] = await mysqlPool.execute(query, params);
    return results;
  } catch (error) {
    console.error('Erreur base de donn√©es:', error);
    throw error;
  }
}

// Test de connexion
export async function testDatabaseConnection() {
  try {
    if (pgPool) {
      await pgPool.query('SELECT NOW()');
      console.log('‚úÖ Connexion PostgreSQL √©tablie');
    } else {
      await mysqlPool.execute('SELECT 1');
      console.log('‚úÖ Connexion MySQL √©tablie');
    }
  } catch (error) {
    console.error('‚ùå Erreur de connexion base de donn√©es:', error);
    throw error;
  }
}
                </div>
            </div>

            <div class="success">
                <strong>‚úÖ Application pr√©par√©e:</strong> La structure est maintenant adapt√©e pour un d√©ploiement Node.js avec toutes les optimisations de s√©curit√© et performance.
            </div>
            <?php
            break;

        // Continuer avec les autres √©tapes Node.js...
        // [Les √©tapes 3-12 suivraient le m√™me pattern d√©taill√©]
        
        default:
            echo "<p>√âtape en cours de d√©veloppement...</p>";
            break;
    }
}

// Inclusion du contenu selon l'√©tape actuelle
renderStepContent($deploymentType, $currentStep);
?>